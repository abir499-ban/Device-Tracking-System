<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css"
        integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        #map {
            height: 100vh;
            width: 100vw;
        }
    </style>
    <title>Device Tracker</title>
</head>

<body>
    <div id="map"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js"
        integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js"
        integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO"
        crossorigin="anonymous"></script>

    <script>
        const socket = io();

        if (navigator.geolocation) {
            navigator.geolocation.watchPosition((position) => {
                const { latitude, longitude } = position.coords;
                socket.emit("send-location", { latitude, longitude });
            },
                (error) => {
                    console.log(error);
                }, {
                enableHighAccuracy: true,
                timeout: 5000,
                maximumAge: 0,
            });
        } else {
            console.log("Geolocation is not supported in this browser");
        }


        const map = L.map("map").setView([0, 0], 10);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Created using leaflet and OpenStreetMap tiles'
        }).addTo(map);

        const marker = {}

        socket.on("received", (data) => {
            const {id, latitude, longitude} = data;
            map.setView([latitude, longitude], 16);
            if(marker[id]){
                marker[id].setLatLng([latitude, longitude]); //for updation of marker
            }else{
                marker[id] = L.marker([latitude, longitude]).addTo(map);    //for creation of marker
            }
        })

        socket.on("user_disconnected", (data)=>{
            if(marker[data]){
                map.removeLayer(marker[data]);
                delete marker[data];
            }
        })
    </script>
</body>

</html>